# This workflow trigger a full Sonar analysis at regular interval
# Because the code coverage is also collected for Cypress tests, the integration tests have to be executed prior to the Sonar analysis
# Github actions command reference: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
name: Sonar Analysis - Scheduled

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * 1,3,5' # At 4AM, on Monday, Wednesday and Friday

env:
  MODULE_ID: html-filtering

jobs:

  integration-tests:
    name: Integration Tests
    runs-on: self-hosted
    timeout-minutes: 45
    steps:
      # The helper is used to print instructions, such as how to connect to the runner.
      # It should be defined as a workflow step (vs a step in an action itself) since some
      # annotations are only posted upon completion of the step (i.e. you'd only see
      # the connection instructions annotation posted once the integration tests are done)
      - uses: jahia/jahia-modules-action/helper@v2
      - uses: actions/checkout@v4
      - uses: KengoTODA/actions-setup-docker-compose@main
        with:
          version: '2.23.0'
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: Create JaCoCo data volume with proper permissions
        run: |
          docker volume create jacoco-data
          # Create a temporary container to set permissions
          docker run --rm -v jacoco-data:/jacoco-data alpine sh -c "mkdir -p /jacoco-data && chmod -R 777 /jacoco-data"
      - uses: jahia/jahia-modules-action/integration-tests@v2
        with:
          module_id: html-filtering
          testrail_project: HTML Filtering Module
          tests_manifest: provisioning-manifest-snapshot.yml
          jahia_image: jahia/jahia-ee:8
          should_skip_artifacts: true
          should_skip_notifications: true
          should_skip_testrail: true
          should_skip_pagerduty: true
          should_skip_zencrepes: true
          bastion_ssh_private_key: ${{ secrets.BASTION_SSH_PRIVATE_KEY_JAHIACI }}
          jahia_license: ${{ secrets.JAHIA_LICENSE_8X_FULL }}
          docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_password: ${{ secrets.DOCKERHUB_PASSWORD }}
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
      - name: Upload JaCoCo data
        run: |
          # Create target directory
          mkdir -p ${{ github.workspace }}/target
          # Copy the JaCoCo data from the Docker volume to the local filesystem with proper permissions
          docker run --rm -v jacoco-data:/jacoco-data -v ${{ github.workspace }}/target:/target alpine sh -c "cp /jacoco-data/jacoco-cypress.exec /target/ && chmod 644 /target/jacoco-cypress.exec"
      - uses: actions/upload-artifact@v4
        with:
          name: jacoco-cypress-execution-data
          path: target/jacoco-cypress.exec
      - name: Test Report
        uses: phoenix-actions/test-reporting@v12
        if: success() || failure()
        with:
          name: Tests Report
          path: tests/artifacts/results/xml_reports/**/*.xml
          reporter: java-junit
          fail-on-error: 'false'
          output-to: 'checks'

  integration-tests-jacoco-report:
    name: Integration tests JaCoCo report
    needs: integration-tests
    runs-on: ubuntu-latest
    container:
      image: jahia/cimg-mvn-cache:ga_cimg_openjdk_8.0.312-node
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Download JaCoCo Cypress execution data
        uses: actions/download-artifact@v4
        with:
          name: jacoco-cypress-execution-data
          path: target
      - name: Generate JaCoCo Cypress report
        # The Java classes must be compiled before creating the report
        run: mvn compile org.jacoco:jacoco-maven-plugin:report -Djacoco.dataFile=target/jacoco-cypress.exec
      - name: Rename JaCoCo report directory
        run: mv target/site/jacoco target/site/jacoco-cypress
      - name: Upload JaCoCo Cypress report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-cypress-report
          path: target/site/jacoco-cypress/

  sonar-analysis:
    name: Sonar Analysis
    needs: integration-tests-jacoco-report
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
         supported_branches: ["${{ github.event.repository.default_branch }}"]
    container:
      image: jahia/cimg-mvn-cache:ga_cimg_openjdk_11.0.20-node
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ matrix.supported_branches }}
      - uses: jahia/jahia-modules-action/sonar-analysis@v2
        with:
          primary_release_branch: ${{ matrix.supported_branches }}
          build_artifacts: ''
          github_pr_id: ${{github.event.number}}
          sonar_url: ${{ secrets.SONAR_URL }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          mvn_settings_filepath: '.github/maven.settings.xml'
          nvd_apikey: ${{ secrets.NVD_APIKEY }}
          github_slug: jahia/html-filtering
